"""
Django settings for rentalhub project.

Generated by 'django-admin startproject' using Django 5.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-d-g1wk#oc4dc--ug)l&hhf83w7tcrn_q%6%rd^_^22@j3x+=pg'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'core',
    'django.contrib.sites',  # Required for allauth
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
]


AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
]

SITE_ID = 1

# LOGIN_REDIRECT_URL = "/"  # Redirect after login
# LOGOUT_REDIRECT_URL = "/"  # Redirect after logout

SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'APP': {
            'client_id': '920479129042-i1k39vd9jb63nn614epk7viic3m4f077.apps.googleusercontent.com',
            'secret': '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',
            'key': ''
        }
        
    } 
}

# SOCIALACCOUNT_PROVIDERS = {
#     'google': {
#         'SCOPE': ['profile', 'email'],
#         'AUTH_PARAMS': {'access_type': 'online'},
#     } 
# }
# SOCIALACCOUNT_PROVIDERS = (
#     {
#         'name': 'Google',
#         'scope': ('email', 'profile'),
#         'app_name': 'socialaccount.providers.google',
#         'api_version': 'v2',
#         'client_class': 'social_core.backends.google.GoogleOAuth2',
#         'arg_settings': {
#             'access_type': 'offline',
#             'approval_prompt': 'force',
#         },
#     },
# )

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    'allauth.account.middleware.AccountMiddleware',
]

ROOT_URLCONF = 'rentalhub.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / "templates"],  # Ensure this includes your templates directory
        
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'rentalhub.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'



MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

STATIC_URL = 'static/'
# Add this line to specify the directory where static files will be collected
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]


LOGIN_URL ='/accounts/login'

LOGIN_REDIRECT_URL = '/core/'
LOGOUT_REDIRECT_URL = '/core/'

AUTH_USER_MODEL = 'core.User'  # Point to your custom User model
MESSAGE_STORAGE = 'django.contrib.messages.storage.session.SessionStorage'

RAZORPAY_KEY_ID = 'rzp_test_zxL57CWrx3zkB0'
RAZORPAY_KEY_SECRET = 'YXhsMCw5sDCeHeMAk9mIc0t0'

GEMINI_API_KEY = "AIzaSyBOgx6_jTZIZIsaE-Ol_awnKnyneHCtmSs"

ACCOUNT_EMAIL_VERIFICATION = "none"  # Disable email verification
ACCOUNT_AUTHENTICATION_METHOD = "username"
ACCOUNT_EMAIL_REQUIRED = False

EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = "smtp.gmail.com"
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = "khotshubham393@gmail.com"
EMAIL_HOST_PASSWORD = "glvtrmbijmvdayrz"  # Use App Password if using Gmail
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER
